schema {
  query: QueryOfRuntime
  mutation: MutationOfRuntime
}

type QueryOfRuntime {
  deployment(name: String!): DeploymentInfo
}

type MutationOfRuntime {
  setDeployment(name: String! info: DeploymentInfoDtoInput!): Unit!
}

input DeploymentInfoDtoInput {
  storeUrl: URL!
  derivation: String!
  outPath: String
}

scalar Unit

type DeploymentInfo {
  storeUrl: URL!
  derivation: String!
  outPath: String
}

scalar URL

"The purpose of the `cost` directive is to define a `weight` for GraphQL types, fields, and arguments. Static analysis can use these weights when calculating the overall cost of a query or response."
directive @cost("The `weight` argument defines what value to add to the overall cost for every appearance, or possible appearance, of a type, field, argument, etc." weight: String!) on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM | INPUT_FIELD_DEFINITION